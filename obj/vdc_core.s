;
; File generated by cc65 v 2.17 - Git eeb1b927
;
	.fopt		compiler,"cc65 v 2.17 - Git eeb1b927"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "vdc_core.c", 7903, 1543295180
	.dbg		file, "vdc_gui.h", 778, 1543280824
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/c128.h", 6693, 1534214079
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/_vic2.h", 11027, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/_sid.h", 3694, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/_vdc.h", 2880, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/_6526.h", 4033, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/peekpoke.h", 3166, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/string.h", 5198, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/stddef.h", 3127, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/stdio.h", 6334, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/stdarg.h", 2970, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/stdlib.h", 5884, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/conio.h", 9160, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/target.h", 3065, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/cbm.h", 11658, 1532377546
	.dbg		file, "J:\Software\Emulation\Commodore\Development\cc65\include/cbm_filetype.h", 5057, 1532377546
	.dbg		file, "vdc_win.h", 1736, 1543282193
	.dbg		file, "vdc_core.h", 1814, 1543295196
	.dbg		file, "vdc_controls.h", 561, 1543268877
	.dbg		file, "vdc_menus.h", 527, 1543268877
	.dbg		file, "vdc_control_listbox.h", 945, 1543268877
	.dbg		file, "vdc_control_textbox.h", 916, 1543268877
	.dbg		file, "vdc_control_label.h", 695, 1543268877
	.dbg		file, "vdc_control_button.h", 818, 1543268877
	.dbg		file, "vdc_control_checkbox.h", 815, 1543268877
	.dbg		sym, "fast", "00", extern, "_fast"
	.dbg		sym, "printf", "00", extern, "_printf"
	.import		_fast
	.import		_printf
	.export		_VDC_Init
	.export		_VDC_DrawBox
	.export		_VDC_PetsciiToScreenCode
	.export		_VDC_PetsciiToScreenCodeRvs
	.export		_VDC_RowColToAddress
	.export		_VDC_Poke
	.export		_VDC_Peek
	.export		_VDC_BackColor
	.export		_VDC_CursorAt
	.export		_VDC_PrintAt
	.export		_VDC_Clear
	.export		_VDC_BlockCopy
	.export		_VDC_Fill
	.export		_VDC_StashScreen
	.export		_VDC_FetchScreen
	.export		_VDC_SetCursorMode
	.export		_VDC_CopyVDCToMem
	.export		_VDC_CopyMemToVDC

.segment	"RODATA"

L0008:
	.byte	$25,$43,$25,$43,$00

; ---------------------------------------------------------------
; void __near__ VDC_Init (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_Init: near

	.dbg	func, "VDC_Init", "00", extern, "_VDC_Init"

.segment	"CODE"

	.dbg	line, "vdc_core.c", 15
	lda     #<(L0008)
	ldx     #>(L0008)
	jsr     pushax
	lda     #$0E
	jsr     pusha0
	lda     #$93
	jsr     pusha0
	ldy     #$06
	jsr     _printf
	.dbg	line, "vdc_core.c", 16
	jmp     _fast
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ VDC_DrawBox (unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_DrawBox: near

	.dbg	func, "VDC_DrawBox", "00", extern, "_VDC_DrawBox"
	.dbg	sym, "x", "00", auto, 4
	.dbg	sym, "y", "00", auto, 3
	.dbg	sym, "width", "00", auto, 2
	.dbg	sym, "height", "00", auto, 1
	.dbg	sym, "borderStyle", "00", auto, 0
	.dbg	sym, "borderChars", "00", auto, -8
	.dbg	sym, "i", "00", auto, -10

.segment	"CODE"

	.dbg	line, "vdc_core.c", 20
	jsr     pusha
	.dbg	line, "vdc_core.c", 24
	ldy     #$0A
	jsr     subysp
	ldx     #$00
	lda     #$F0
	jsr     _VDC_PetsciiToScreenCode
	ldy     #$02
	sta     (sp),y
	.dbg	line, "vdc_core.c", 25
	ldx     #$00
	lda     #$EE
	jsr     _VDC_PetsciiToScreenCode
	ldy     #$03
	sta     (sp),y
	.dbg	line, "vdc_core.c", 26
	ldx     #$00
	lda     #$C0
	jsr     _VDC_PetsciiToScreenCode
	ldy     #$04
	sta     (sp),y
	.dbg	line, "vdc_core.c", 27
	ldx     #$00
	lda     #$C0
	jsr     _VDC_PetsciiToScreenCode
	ldy     #$05
	sta     (sp),y
	.dbg	line, "vdc_core.c", 28
	ldx     #$00
	lda     #$7D
	jsr     _VDC_PetsciiToScreenCode
	ldy     #$06
	sta     (sp),y
	.dbg	line, "vdc_core.c", 29
	ldx     #$00
	lda     #$7D
	jsr     _VDC_PetsciiToScreenCode
	ldy     #$07
	sta     (sp),y
	.dbg	line, "vdc_core.c", 30
	ldx     #$00
	lda     #$ED
	jsr     _VDC_PetsciiToScreenCode
	ldy     #$08
	sta     (sp),y
	.dbg	line, "vdc_core.c", 31
	ldx     #$00
	lda     #$FD
	jsr     _VDC_PetsciiToScreenCode
	ldy     #$09
	sta     (sp),y
	.dbg	line, "vdc_core.c", 34
	iny
	lda     (sp),y
	cmp     #$01
	beq     L0032
	.dbg	line, "vdc_core.c", 35
	ldx     #$00
	txa
L024C:	jsr     stax0sp
	cmp     #$08
	txa
	sbc     #$00
	bvc     L0038
	eor     #$80
L0038:	bpl     L0032
	.dbg	line, "vdc_core.c", 36
	lda     #$02
	jsr     leaa0sp
	ldy     #$00
	clc
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     pushax
	ldy     #$0C
	lda     (sp),y
	ldx     #$00
	jsr     _VDC_PetsciiToScreenCode
	ldy     #$00
	jsr     staspidx
	.dbg	line, "vdc_core.c", 35
	jsr     ldax0sp
	jsr     incax1
	jmp     L024C
	.dbg	line, "vdc_core.c", 39
L0032:	ldy     #$0D
	lda     (sp),y
	jsr     pusha0
	ldy     #$10
	lda     (sp),y
	jsr     _VDC_RowColToAddress
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	jsr     _VDC_Poke
	.dbg	line, "vdc_core.c", 42
	ldy     #$0D
	lda     (sp),y
	jsr     pusha0
	ldy     #$0E
	lda     (sp),y
	clc
	ldy     #$10
	adc     (sp),y
	bcc     L023F
	inx
L023F:	jsr     decax1
	jsr     _VDC_RowColToAddress
	jsr     pushax
	ldy     #$05
	lda     (sp),y
	jsr     _VDC_Poke
	.dbg	line, "vdc_core.c", 45
	ldx     #$00
	lda     #$01
L024D:	jsr     stax0sp
	jsr     pushax
	ldy     #$0E
	ldx     #$00
	lda     (sp),y
	jsr     decax1
	jsr     tosicmp
	bcs     L004B
	.dbg	line, "vdc_core.c", 47
	ldy     #$0D
	lda     (sp),y
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	clc
	ldy     #$10
	adc     (sp),y
	bcc     L0240
	inx
L0240:	jsr     _VDC_RowColToAddress
	jsr     pushax
	ldy     #$06
	lda     (sp),y
	jsr     _VDC_Poke
	.dbg	line, "vdc_core.c", 48
	ldx     #$00
	ldy     #$0B
	lda     (sp),y
	clc
	ldy     #$0D
	adc     (sp),y
	bcc     L0241
	inx
L0241:	jsr     decax1
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	clc
	ldy     #$10
	adc     (sp),y
	bcc     L0242
	inx
L0242:	jsr     _VDC_RowColToAddress
	jsr     pushax
	ldy     #$07
	lda     (sp),y
	jsr     _VDC_Poke
	.dbg	line, "vdc_core.c", 45
	jsr     ldax0sp
	jsr     incax1
	jmp     L024D
	.dbg	line, "vdc_core.c", 51
L004B:	ldx     #$00
	lda     #$01
L024E:	jsr     stax0sp
	jsr     pushax
	ldy     #$0D
	ldx     #$00
	lda     (sp),y
	jsr     decax1
	jsr     tosicmp
	bcs     L005F
	.dbg	line, "vdc_core.c", 54
	jsr     ldax0sp
	clc
	ldy     #$0D
	adc     (sp),y
	bcc     L0243
	inx
L0243:	jsr     pushax
	ldy     #$10
	lda     (sp),y
	ldx     #$00
	jsr     _VDC_RowColToAddress
	jsr     pushax
	ldy     #$08
	lda     (sp),y
	jsr     _VDC_Poke
	.dbg	line, "vdc_core.c", 57
	jsr     ldax0sp
	clc
	ldy     #$0D
	adc     (sp),y
	bcc     L0244
	inx
L0244:	jsr     pushax
	ldx     #$00
	ldy     #$0E
	lda     (sp),y
	clc
	ldy     #$10
	adc     (sp),y
	bcc     L0245
	inx
L0245:	jsr     decax1
	jsr     _VDC_RowColToAddress
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     _VDC_Poke
	.dbg	line, "vdc_core.c", 51
	jsr     ldax0sp
	jsr     incax1
	jmp     L024E
	.dbg	line, "vdc_core.c", 61
L005F:	ldx     #$00
	ldy     #$0B
	lda     (sp),y
	clc
	ldy     #$0D
	adc     (sp),y
	bcc     L0246
	inx
L0246:	jsr     decax1
	jsr     pushax
	ldy     #$10
	lda     (sp),y
	ldx     #$00
	jsr     _VDC_RowColToAddress
	jsr     pushax
	ldy     #$0A
	lda     (sp),y
	jsr     _VDC_Poke
	.dbg	line, "vdc_core.c", 62
	ldx     #$00
	ldy     #$0B
	lda     (sp),y
	clc
	ldy     #$0D
	adc     (sp),y
	bcc     L0247
	inx
L0247:	jsr     decax1
	jsr     pushax
	ldx     #$00
	ldy     #$0E
	lda     (sp),y
	clc
	ldy     #$10
	adc     (sp),y
	bcc     L0248
	inx
L0248:	jsr     decax1
	jsr     _VDC_RowColToAddress
	jsr     pushax
	ldy     #$0B
	lda     (sp),y
	jsr     _VDC_Poke
	.dbg	line, "vdc_core.c", 64
	ldy     #$0F
	jmp     addysp
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ VDC_PetsciiToScreenCode (int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_PetsciiToScreenCode: near

	.dbg	func, "VDC_PetsciiToScreenCode", "00", extern, "_VDC_PetsciiToScreenCode"
	.dbg	sym, "p", "00", auto, 0

.segment	"CODE"

	.dbg	line, "vdc_core.c", 67
	jsr     pushax
	.dbg	line, "vdc_core.c", 69
	jsr     ldax0sp
	txa
	bmi     L007F
	jsr     ldax0sp
	cmp     #$20
	txa
	sbc     #$00
	bvc     L0082
	eor     #$80
L0082:	bpl     L007F
	jsr     ldax0sp
	ldy     #$80
	jsr     incaxy
	.dbg	line, "vdc_core.c", 70
	jmp     L0260
L007F:	jsr     ldax0sp
	cmp     #$40
	txa
	sbc     #$00
	bvs     L0089
	eor     #$80
L0089:	bpl     L0087
	jsr     ldax0sp
	cmp     #$60
	txa
	sbc     #$00
	bvc     L008B
	eor     #$80
L008B:	bpl     L0087
	jsr     ldax0sp
	ldy     #$40
	jsr     decaxy
	.dbg	line, "vdc_core.c", 71
	jmp     L0260
L0087:	jsr     ldax0sp
	cmp     #$60
	txa
	sbc     #$00
	bvs     L0092
	eor     #$80
L0092:	bpl     L0090
	jsr     ldax0sp
	cmp     #$80
	txa
	sbc     #$00
	bvc     L0094
	eor     #$80
L0094:	bpl     L0090
	jsr     ldax0sp
	ldy     #$20
	jsr     decaxy
	.dbg	line, "vdc_core.c", 72
	jmp     L0260
L0090:	jsr     ldax0sp
	cmp     #$80
	txa
	sbc     #$00
	bvs     L009B
	eor     #$80
L009B:	bpl     L0099
	jsr     ldax0sp
	cmp     #$A0
	txa
	sbc     #$00
	bvc     L009D
	eor     #$80
L009D:	bpl     L0099
	jsr     ldax0sp
	ldy     #$40
	jsr     incaxy
	.dbg	line, "vdc_core.c", 73
	jmp     L0260
L0099:	jsr     ldax0sp
	cmp     #$A2
	txa
	sbc     #$00
	bvs     L00A4
	eor     #$80
L00A4:	bpl     L00A2
	jsr     ldax0sp
	cmp     #$C0
	txa
	sbc     #$00
	bvc     L00A6
	eor     #$80
L00A6:	bpl     L00A2
	jsr     ldax0sp
	ldy     #$40
	jsr     decaxy
	.dbg	line, "vdc_core.c", 74
	jmp     L0260
L00A2:	jsr     ldax0sp
	cmp     #$C0
	txa
	sbc     #$00
	bvs     L00AD
	eor     #$80
L00AD:	bpl     L00AB
	jsr     ldax0sp
	cmp     #$FE
	txa
	sbc     #$00
	bvc     L00AF
	eor     #$80
L00AF:	bpl     L00AB
	jsr     ldax0sp
	ldy     #$80
	jsr     decaxy
	.dbg	line, "vdc_core.c", 75
	jmp     L0260
L00AB:	ldy     #$01
	lda     (sp),y
	bne     L0261
	dey
	lda     (sp),y
	cmp     #$FF
	bne     L0261
	ldx     #$00
	lda     #$5E
L0260:	jsr     stax0sp
	.dbg	line, "vdc_core.c", 77
L0261:	jsr     ldax0sp
	.dbg	line, "vdc_core.c", 78
	jmp     incsp2
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ VDC_PetsciiToScreenCodeRvs (int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_PetsciiToScreenCodeRvs: near

	.dbg	func, "VDC_PetsciiToScreenCodeRvs", "00", extern, "_VDC_PetsciiToScreenCodeRvs"
	.dbg	sym, "p", "00", auto, 0

.segment	"CODE"

	.dbg	line, "vdc_core.c", 81
	jsr     pushax
	.dbg	line, "vdc_core.c", 83
	jsr     ldax0sp
	txa
	bmi     L00BB
	jsr     ldax0sp
	cmp     #$20
	txa
	sbc     #$00
	bvc     L00BE
	eor     #$80
L00BE:	bpl     L00BB
	jsr     ldax0sp
	ldy     #$80
	jsr     incaxy
	.dbg	line, "vdc_core.c", 84
	jmp     L0279
L00BB:	jsr     ldax0sp
	cmp     #$20
	txa
	sbc     #$00
	bvs     L00C5
	eor     #$80
L00C5:	bpl     L00C3
	jsr     ldax0sp
	cmp     #$40
	txa
	sbc     #$00
	bvc     L00C7
	eor     #$80
L00C7:	bpl     L00C3
	jsr     ldax0sp
	ldy     #$80
	jsr     incaxy
	.dbg	line, "vdc_core.c", 85
	jmp     L0279
L00C3:	jsr     ldax0sp
	cmp     #$40
	txa
	sbc     #$00
	bvs     L00CE
	eor     #$80
L00CE:	bpl     L00CC
	jsr     ldax0sp
	cmp     #$60
	txa
	sbc     #$00
	bvc     L00D0
	eor     #$80
L00D0:	bpl     L00CC
	jsr     ldax0sp
	ldy     #$40
	jsr     incaxy
	.dbg	line, "vdc_core.c", 86
	jmp     L0279
L00CC:	jsr     ldax0sp
	cmp     #$60
	txa
	sbc     #$00
	bvs     L00D7
	eor     #$80
L00D7:	bpl     L00D5
	jsr     ldax0sp
	cmp     #$80
	txa
	sbc     #$00
	bvc     L00D9
	eor     #$80
L00D9:	bpl     L00D5
	jsr     ldax0sp
	ldy     #$20
	jsr     decaxy
	.dbg	line, "vdc_core.c", 87
	jmp     L0279
L00D5:	jsr     ldax0sp
	cmp     #$80
	txa
	sbc     #$00
	bvs     L00E0
	eor     #$80
L00E0:	bpl     L00DE
	jsr     ldax0sp
	cmp     #$A0
	txa
	sbc     #$00
	bvc     L00E2
	eor     #$80
L00E2:	bpl     L00DE
	jsr     ldax0sp
	ldy     #$40
	jsr     incaxy
	.dbg	line, "vdc_core.c", 88
	jmp     L0279
L00DE:	jsr     ldax0sp
	cmp     #$A2
	txa
	sbc     #$00
	bvs     L00E9
	eor     #$80
L00E9:	bpl     L00E7
	jsr     ldax0sp
	cmp     #$C0
	txa
	sbc     #$00
	bvc     L00EB
	eor     #$80
L00EB:	bpl     L00E7
	jsr     ldax0sp
	ldy     #$40
	jsr     decaxy
	.dbg	line, "vdc_core.c", 89
	jmp     L0279
L00E7:	jsr     ldax0sp
	cmp     #$C0
	txa
	sbc     #$00
	bvs     L00F2
	eor     #$80
L00F2:	bpl     L00F0
	jsr     ldax0sp
	cmp     #$E0
	txa
	sbc     #$00
	bvc     L00F4
	eor     #$80
L00F4:	bpl     L00F0
	jsr     ldax0sp
	ldy     #$80
	jsr     decaxy
	.dbg	line, "vdc_core.c", 90
	jmp     L0279
L00F0:	jsr     ldax0sp
	cmp     #$E0
	txa
	sbc     #$00
	bvs     L00FB
	eor     #$80
L00FB:	bpl     L00F9
	jsr     ldax0sp
	cmp     #$FF
	txa
	sbc     #$00
	bvc     L00FD
	eor     #$80
L00FD:	bpl     L00F9
	jsr     ldax0sp
	ldy     #$80
	jsr     decaxy
	.dbg	line, "vdc_core.c", 91
	jmp     L0279
L00F9:	ldy     #$01
	lda     (sp),y
	bne     L027A
	dey
	lda     (sp),y
	cmp     #$FF
	bne     L027A
	ldx     #$00
	lda     #$5E
L0279:	jsr     stax0sp
	.dbg	line, "vdc_core.c", 93
L027A:	jsr     ldax0sp
	.dbg	line, "vdc_core.c", 94
	jmp     incsp2
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ VDC_RowColToAddress (int, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_RowColToAddress: near

	.dbg	func, "VDC_RowColToAddress", "00", extern, "_VDC_RowColToAddress"
	.dbg	sym, "row", "00", auto, 2
	.dbg	sym, "col", "00", auto, 0
	.dbg	sym, "addr", "00", auto, -2

.segment	"CODE"

	.dbg	line, "vdc_core.c", 97
	jsr     pushax
	.dbg	line, "vdc_core.c", 101
	jsr     decsp2
	ldy     #$07
	jsr     pushwysp
	lda     #$50
	jsr     tosmula0
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	jsr     ldaxysp
	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	tax
	pla
	jsr     stax0sp
	.dbg	line, "vdc_core.c", 103
	txa
	bmi     L010B
	jsr     ldax0sp
	cmp     #$D0
	txa
	sbc     #$07
	bvc     L010E
	eor     #$80
L010E:	bpl     L010B
	.dbg	line, "vdc_core.c", 104
	jsr     ldax0sp
	jmp     incsp6
	.dbg	line, "vdc_core.c", 106
L010B:	ldx     #$FF
	txa
	.dbg	line, "vdc_core.c", 107
	jmp     incsp6
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ VDC_Poke (int, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_Poke: near

	.dbg	func, "VDC_Poke", "00", extern, "_VDC_Poke"
	.dbg	sym, "address", "00", auto, 1
	.dbg	sym, "value", "00", auto, 0

.segment	"CODE"

	.dbg	line, "vdc_core.c", 111
	jsr     pusha
	.dbg	line, "vdc_core.c", 113
	lda     #$12
	sta     $D600
	.dbg	line, "vdc_core.c", 114
	ldy     #$02
	jsr     ldaxysp
	cpx     #$80
	stx     $D601
	.dbg	line, "vdc_core.c", 117
	lda     #$13
	sta     $D600
	.dbg	line, "vdc_core.c", 118
	ldy     #$01
	lda     (sp),y
	sta     $D601
	.dbg	line, "vdc_core.c", 121
	lda     #$1F
	sta     $D600
	.dbg	line, "vdc_core.c", 122
	dey
	lda     (sp),y
	sta     $D601
	.dbg	line, "vdc_core.c", 123
	jmp     incsp3
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ VDC_Peek (int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_Peek: near

	.dbg	func, "VDC_Peek", "00", extern, "_VDC_Peek"
	.dbg	sym, "address", "00", auto, 0

.segment	"CODE"

	.dbg	line, "vdc_core.c", 127
	jsr     pushax
	.dbg	line, "vdc_core.c", 129
	lda     #$12
	sta     $D600
	.dbg	line, "vdc_core.c", 130
	jsr     ldax0sp
	cpx     #$80
	stx     $D601
	.dbg	line, "vdc_core.c", 133
	lda     #$13
	sta     $D600
	.dbg	line, "vdc_core.c", 134
	ldy     #$00
	lda     (sp),y
	sta     $D601
	.dbg	line, "vdc_core.c", 136
	lda     #$1F
	sta     $D600
	.dbg	line, "vdc_core.c", 138
	lda     $D601
	ldx     #$00
	.dbg	line, "vdc_core.c", 139
	jmp     incsp2
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ VDC_BackColor (int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_BackColor: near

	.dbg	func, "VDC_BackColor", "00", extern, "_VDC_BackColor"
	.dbg	sym, "color", "00", auto, 0
	.dbg	sym, "regval", "00", auto, -2

.segment	"CODE"

	.dbg	line, "vdc_core.c", 143
	jsr     pushax
	.dbg	line, "vdc_core.c", 147
	jsr     decsp2
	lda     #$1A
	sta     $D600
	.dbg	line, "vdc_core.c", 148
	lda     $D601
	ldx     #$00
	jsr     stax0sp
	.dbg	line, "vdc_core.c", 150
	lda     #$1A
	sta     $D600
	.dbg	line, "vdc_core.c", 151
	lda     (sp,x)
	and     #$F0
	sta     ptr1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	sta     $D601
	.dbg	line, "vdc_core.c", 152
	jmp     incsp4
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ VDC_CursorAt (int, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_CursorAt: near

	.dbg	func, "VDC_CursorAt", "00", extern, "_VDC_CursorAt"
	.dbg	sym, "row", "00", auto, 2
	.dbg	sym, "col", "00", auto, 0
	.dbg	sym, "address", "00", auto, -2

.segment	"CODE"

	.dbg	line, "vdc_core.c", 155
	jsr     pushax
	.dbg	line, "vdc_core.c", 158
	jsr     decsp2
	ldy     #$05
	jsr     ldaxysp
	cpx     #$80
	bcs     L0281
	ldy     #$05
	jsr     ldaxysp
	cmp     #$19
	txa
	sbc     #$00
	bvs     L014D
	eor     #$80
L014D:	bmi     L0281
	ldy     #$03
	jsr     ldaxysp
	cpx     #$80
	bcs     L0281
	ldy     #$03
	jsr     ldaxysp
	cmp     #$50
	txa
	sbc     #$00
	bvs     L014E
	eor     #$80
L014E:	bpl     L014B
	.dbg	line, "vdc_core.c", 159
L0281:	ldx     #$FF
	txa
	jmp     incsp6
	.dbg	line, "vdc_core.c", 161
L014B:	ldy     #$07
	jsr     pushwysp
	ldy     #$05
	jsr     ldaxysp
	jsr     _VDC_RowColToAddress
	jsr     stax0sp
	.dbg	line, "vdc_core.c", 163
	lda     #$0E
	sta     $D600
	.dbg	line, "vdc_core.c", 164
	jsr     ldax0sp
	cpx     #$80
	stx     $D601
	.dbg	line, "vdc_core.c", 166
	lda     #$0F
	sta     $D600
	.dbg	line, "vdc_core.c", 167
	ldy     #$00
	lda     (sp),y
	sta     $D601
	.dbg	line, "vdc_core.c", 169
	ldx     #$00
	txa
	.dbg	line, "vdc_core.c", 170
	jmp     incsp6
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ VDC_PrintAt (int, int, __near__ unsigned char *, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_PrintAt: near

	.dbg	func, "VDC_PrintAt", "00", extern, "_VDC_PrintAt"
	.dbg	sym, "row", "00", auto, 6
	.dbg	sym, "col", "00", auto, 4
	.dbg	sym, "text", "00", auto, 2
	.dbg	sym, "rvsOn", "00", auto, 0
	.dbg	sym, "x", "00", auto, -2
	.dbg	sym, "address", "00", auto, -4

.segment	"CODE"

	.dbg	line, "vdc_core.c", 172
	jsr     pushax
	.dbg	line, "vdc_core.c", 176
	jsr     decsp4
	ldy     #$0D
	jsr     pushwysp
	ldy     #$0B
	jsr     ldaxysp
	jsr     _VDC_RowColToAddress
	jsr     stax0sp
	.dbg	line, "vdc_core.c", 178
	cpx     #$FF
	bne     L0285
	cmp     #$FF
	jeq     L0184
	.dbg	line, "vdc_core.c", 180
L0285:	ldx     #$00
	txa
	ldy     #$02
	jsr     staxysp
	.dbg	line, "vdc_core.c", 181
	jmp     L0170
	.dbg	line, "vdc_core.c", 183
L016E:	ldy     #$03
	jsr     ldaxysp
	clc
	ldy     #$06
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     pusha
	.dbg	line, "vdc_core.c", 185
	ldy     #$06
	lda     (sp),y
	bne     L0175
	dey
	lda     (sp),y
	cmp     #$01
	bne     L0175
	.dbg	line, "vdc_core.c", 186
	dey
	jsr     pushwysp
	ldy     #$02
	lda     (sp),y
	ldx     #$00
	jsr     _VDC_PetsciiToScreenCodeRvs
	.dbg	line, "vdc_core.c", 187
	jmp     L0284
	.dbg	line, "vdc_core.c", 188
L0175:	ldy     #$04
	jsr     pushwysp
	ldy     #$02
	lda     (sp),y
	ldx     #$00
	jsr     _VDC_PetsciiToScreenCode
L0284:	jsr     _VDC_Poke
	.dbg	line, "vdc_core.c", 190
	ldy     #$02
	jsr     ldaxysp
	jsr     incax1
	ldy     #$01
	jsr     staxysp
	.dbg	line, "vdc_core.c", 191
	ldy     #$04
	jsr     ldaxysp
	jsr     incax1
	ldy     #$03
	jsr     staxysp
	.dbg	line, "vdc_core.c", 192
	jsr     incsp1
	.dbg	line, "vdc_core.c", 181
L0170:	ldy     #$03
	jsr     ldaxysp
	clc
	ldy     #$06
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	bne     L016E
	.dbg	line, "vdc_core.c", 193
	ldy     #$03
	jsr     ldaxysp
	.dbg	line, "vdc_core.c", 197
L0184:	ldy     #$0C
	jmp     addysp
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ VDC_Clear (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_Clear: near

	.dbg	func, "VDC_Clear", "00", extern, "_VDC_Clear"
	.dbg	sym, "val", "00", auto, 0
	.dbg	sym, "i", "00", auto, -2

.segment	"CODE"

	.dbg	line, "vdc_core.c", 200
	jsr     pusha
	.dbg	line, "vdc_core.c", 204
	jsr     decsp2
	lda     #$12
	sta     $D600
	.dbg	line, "vdc_core.c", 205
	lda     #$00
	sta     $D601
	.dbg	line, "vdc_core.c", 208
	lda     #$13
	sta     $D600
	.dbg	line, "vdc_core.c", 209
	lda     #$00
	sta     $D601
	.dbg	line, "vdc_core.c", 212
	lda     #$18
	sta     $D600
	.dbg	line, "vdc_core.c", 213
	lda     $D601
	and     #$7F
	sta     $D601
	.dbg	line, "vdc_core.c", 216
	lda     #$1F
	sta     $D600
	.dbg	line, "vdc_core.c", 217
	ldy     #$02
	lda     (sp),y
	sta     $D601
	.dbg	line, "vdc_core.c", 220
	lda     #$1E
	sta     $D600
	.dbg	line, "vdc_core.c", 223
	ldx     #$00
	txa
L0289:	jsr     stax0sp
	cmp     #$08
	txa
	sbc     #$00
	bvc     L01AA
	eor     #$80
L01AA:	asl     a
	lda     #$00
	tax
	bcc     L0287
	.dbg	line, "vdc_core.c", 224
	lda     #$FF
	sta     $D601
	.dbg	line, "vdc_core.c", 223
	jsr     ldax0sp
	jsr     incax1
	jmp     L0289
	.dbg	line, "vdc_core.c", 227
L0287:	jmp     incsp3
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ VDC_BlockCopy (int, int, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_BlockCopy: near

	.dbg	func, "VDC_BlockCopy", "00", extern, "_VDC_BlockCopy"
	.dbg	sym, "sourceaddr", "00", auto, 4
	.dbg	sym, "destaddr", "00", auto, 2
	.dbg	sym, "length", "00", auto, 0

.segment	"CODE"

	.dbg	line, "vdc_core.c", 231
	jsr     pushax
	.dbg	line, "vdc_core.c", 232
	jsr     ldax0sp
	cmp     #$00
	txa
	sbc     #$01
	bvs     L01B3
	eor     #$80
L01B3:	bpl     L028A
	.dbg	line, "vdc_core.c", 233
	ldx     #$FF
	txa
	jmp     incsp6
	.dbg	line, "vdc_core.c", 236
L028A:	lda     #$12
	sta     $D600
	.dbg	line, "vdc_core.c", 237
	ldy     #$03
	jsr     ldaxysp
	cpx     #$80
	stx     $D601
	.dbg	line, "vdc_core.c", 240
	lda     #$13
	sta     $D600
	.dbg	line, "vdc_core.c", 241
	ldy     #$02
	lda     (sp),y
	sta     $D601
	.dbg	line, "vdc_core.c", 244
	lda     #$20
	sta     $D600
	.dbg	line, "vdc_core.c", 245
	ldy     #$05
	jsr     ldaxysp
	cpx     #$80
	stx     $D601
	.dbg	line, "vdc_core.c", 248
	lda     #$21
	sta     $D600
	.dbg	line, "vdc_core.c", 249
	ldy     #$04
	lda     (sp),y
	sta     $D601
	.dbg	line, "vdc_core.c", 252
	lda     #$18
	sta     $D600
	.dbg	line, "vdc_core.c", 253
	lda     $D601
	ora     #$80
	sta     $D601
	.dbg	line, "vdc_core.c", 256
	lda     #$1E
	sta     $D600
	.dbg	line, "vdc_core.c", 257
	ldy     #$00
	lda     (sp),y
	clc
	adc     #$01
	sta     $D601
	.dbg	line, "vdc_core.c", 259
	jsr     ldax0sp
	.dbg	line, "vdc_core.c", 260
	jmp     incsp6
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ VDC_Fill (int, int, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_Fill: near

	.dbg	func, "VDC_Fill", "00", extern, "_VDC_Fill"
	.dbg	sym, "startAddr", "00", auto, 3
	.dbg	sym, "endAddr", "00", auto, 1
	.dbg	sym, "value", "00", auto, 0

.segment	"CODE"

	.dbg	line, "vdc_core.c", 264
	jsr     pusha
	.dbg	line, "vdc_core.c", 265
	jmp     L01E2
	.dbg	line, "vdc_core.c", 266
L01E0:	ldy     #$04
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$03
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     _VDC_Poke
	.dbg	line, "vdc_core.c", 265
L01E2:	ldy     #$06
	jsr     pushwysp
	ldy     #$04
	jsr     ldaxysp
	jsr     tosicmp
	bmi     L01E0
	beq     L01E0
	.dbg	line, "vdc_core.c", 268
	ldx     #$00
	txa
	.dbg	line, "vdc_core.c", 269
	jmp     incsp5
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ VDC_StashScreen (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_StashScreen: near

	.dbg	func, "VDC_StashScreen", "00", extern, "_VDC_StashScreen"
	.dbg	sym, "sourceAddr", "00", auto, -2
	.dbg	sym, "destAddr", "00", auto, -4

.segment	"CODE"

	.dbg	line, "vdc_core.c", 273
	jsr     push0
	.dbg	line, "vdc_core.c", 274
	ldx     #$10
	jsr     pushax
	.dbg	line, "vdc_core.c", 276
	jmp     L01ED
	.dbg	line, "vdc_core.c", 278
L01EB:	ldy     #$05
	jsr     pushwysp
	ldy     #$05
	jsr     pushwysp
	ldx     #$00
	lda     #$FF
	jsr     _VDC_BlockCopy
	.dbg	line, "vdc_core.c", 279
	ldy     #$02
	ldx     #$01
	lda     #$00
	jsr     addeqysp
	.dbg	line, "vdc_core.c", 280
	ldx     #$01
	lda     #$00
	jsr     addeq0sp
	.dbg	line, "vdc_core.c", 276
L01ED:	ldy     #$03
	jsr     ldaxysp
	cmp     #$00
	txa
	sbc     #$08
	bvc     L01EF
	eor     #$80
L01EF:	bmi     L01EB
	.dbg	line, "vdc_core.c", 291
	jmp     incsp4
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ VDC_FetchScreen (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_FetchScreen: near

	.dbg	func, "VDC_FetchScreen", "00", extern, "_VDC_FetchScreen"
	.dbg	sym, "sourceAddr", "00", auto, -2
	.dbg	sym, "destAddr", "00", auto, -4

.segment	"CODE"

	.dbg	line, "vdc_core.c", 297
	ldx     #$10
	lda     #$00
	jsr     pushax
	.dbg	line, "vdc_core.c", 298
	jsr     push0
	.dbg	line, "vdc_core.c", 300
	jmp     L01FD
	.dbg	line, "vdc_core.c", 302
L01FB:	ldy     #$05
	jsr     pushwysp
	ldy     #$05
	jsr     pushwysp
	ldx     #$00
	lda     #$FF
	jsr     _VDC_BlockCopy
	.dbg	line, "vdc_core.c", 303
	ldy     #$02
	ldx     #$01
	lda     #$00
	jsr     addeqysp
	.dbg	line, "vdc_core.c", 304
	ldx     #$01
	lda     #$00
	jsr     addeq0sp
	.dbg	line, "vdc_core.c", 300
L01FD:	ldy     #$03
	jsr     ldaxysp
	cmp     #$00
	txa
	sbc     #$18
	bvc     L01FF
	eor     #$80
L01FF:	bmi     L01FB
	.dbg	line, "vdc_core.c", 316
	ldx     #$00
	txa
	.dbg	line, "vdc_core.c", 317
	jmp     incsp4
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ VDC_SetCursorMode (int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_SetCursorMode: near

	.dbg	func, "VDC_SetCursorMode", "00", extern, "_VDC_SetCursorMode"
	.dbg	sym, "cursorMode", "00", auto, 0

.segment	"CODE"

	.dbg	line, "vdc_core.c", 320
	jsr     pushax
	.dbg	line, "vdc_core.c", 321
	jsr     ldax0sp
	cmp     #$04
	txa
	sbc     #$00
	bvs     L020C
	eor     #$80
L020C:	bmi     L0209
	jsr     ldax0sp
	cpx     #$80
	bcs     L0209
	.dbg	line, "vdc_core.c", 325
	lda     #$12
	sta     $D600
	.dbg	line, "vdc_core.c", 326
	lda     #$00
	sta     $D601
	.dbg	line, "vdc_core.c", 329
	lda     #$13
	sta     $D600
	.dbg	line, "vdc_core.c", 330
	lda     #$00
	sta     $D601
	.dbg	line, "vdc_core.c", 333
	lda     #$0A
	sta     $D600
	.dbg	line, "vdc_core.c", 334
	ldy     #$00
	lda     (sp),y
	sta     $D601
	.dbg	line, "vdc_core.c", 336
L0209:	jmp     incsp2
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ VDC_CopyVDCToMem (int, int, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_CopyVDCToMem: near

	.dbg	func, "VDC_CopyVDCToMem", "00", extern, "_VDC_CopyVDCToMem"
	.dbg	sym, "vdcAddress", "00", auto, 4
	.dbg	sym, "memAddress", "00", auto, 2
	.dbg	sym, "length", "00", auto, 0
	.dbg	sym, "x", "00", auto, -2

.segment	"CODE"

	.dbg	line, "vdc_core.c", 339
	jsr     pushax
	.dbg	line, "vdc_core.c", 342
	jsr     decsp2
	ldx     #$00
	txa
L0295:	jsr     stax0sp
	ldy     #$02
	cmp     (sp),y
	txa
	iny
	sbc     (sp),y
	bvc     L0291
	eor     #$80
L0291:	asl     a
	lda     #$00
	tax
	bcc     L0293
	.dbg	line, "vdc_core.c", 343
	jsr     ldax0sp
	clc
	ldy     #$04
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	clc
	ldy     #$08
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     _VDC_Peek
	ldy     #$00
	jsr     staspidx
	.dbg	line, "vdc_core.c", 342
	jsr     ldax0sp
	jsr     incax1
	jmp     L0295
	.dbg	line, "vdc_core.c", 346
L0293:	jmp     incsp8
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ VDC_CopyMemToVDC (int, int, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VDC_CopyMemToVDC: near

	.dbg	func, "VDC_CopyMemToVDC", "00", extern, "_VDC_CopyMemToVDC"
	.dbg	sym, "memAddress", "00", auto, 4
	.dbg	sym, "vdcAddress", "00", auto, 2
	.dbg	sym, "length", "00", auto, 0
	.dbg	sym, "x", "00", auto, -2

.segment	"CODE"

	.dbg	line, "vdc_core.c", 349
	jsr     pushax
	.dbg	line, "vdc_core.c", 352
	jsr     decsp2
	ldx     #$00
	txa
L029A:	jsr     stax0sp
	ldy     #$02
	cmp     (sp),y
	txa
	iny
	sbc     (sp),y
	bvc     L0296
	eor     #$80
L0296:	asl     a
	lda     #$00
	tax
	bcc     L0298
	.dbg	line, "vdc_core.c", 353
	jsr     ldax0sp
	clc
	ldy     #$04
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	clc
	ldy     #$08
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     _VDC_Poke
	.dbg	line, "vdc_core.c", 352
	jsr     ldax0sp
	jsr     incax1
	jmp     L029A
	.dbg	line, "vdc_core.c", 356
L0298:	jmp     incsp8
	.dbg	line

.endproc

